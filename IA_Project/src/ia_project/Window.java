/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ia_project;

/**
 *
 * @author Denis
 */
public class Window extends javax.swing.JFrame {

    public int nrOfParticles;
    public int d;
    public double maxVelocity;
    public double w;
    public double c1;
    public double c2;
    public int nrOfIterations;
    
    public Window() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel3 = new javax.swing.JLabel();
        nrOfParticlesTF = new javax.swing.JTextField();
        dTF = new javax.swing.JTextField();
        maxVelocityTF = new javax.swing.JTextField();
        wTF = new javax.swing.JTextField();
        c1TF = new javax.swing.JTextField();
        c2TF = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        nrOfIterationsTF = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        solutionsTA = new javax.swing.JTextArea();
        resultTF = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();

        jLabel3.setText("jLabel1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        nrOfParticlesTF.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
            }
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
                nrOfParticlesTFInputMethodTextChanged(evt);
            }
        });
        nrOfParticlesTF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nrOfParticlesTFActionPerformed(evt);
            }
        });

        dTF.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
            }
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
                dTFInputMethodTextChanged(evt);
            }
        });
        dTF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dTFActionPerformed(evt);
            }
        });

        maxVelocityTF.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
            }
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
                maxVelocityTFInputMethodTextChanged(evt);
            }
        });
        maxVelocityTF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                maxVelocityTFActionPerformed(evt);
            }
        });

        wTF.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
            }
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
                wTFInputMethodTextChanged(evt);
            }
        });
        wTF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                wTFActionPerformed(evt);
            }
        });

        c1TF.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
            }
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
                c1TFInputMethodTextChanged(evt);
            }
        });
        c1TF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                c1TFActionPerformed(evt);
            }
        });

        c2TF.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
            }
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
                c2TFInputMethodTextChanged(evt);
            }
        });
        c2TF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                c2TFActionPerformed(evt);
            }
        });

        jLabel1.setText("Nr. of particles");

        jLabel2.setText("Problem Dimension (d)");

        jLabel4.setText("Maximum Velocity");

        jLabel5.setText("c1");

        jLabel6.setText("w");

        jLabel7.setText("c2");

        nrOfIterationsTF.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
            }
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
                nrOfIterationsTFInputMethodTextChanged(evt);
            }
        });
        nrOfIterationsTF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nrOfIterationsTFActionPerformed(evt);
            }
        });

        jLabel8.setText("Nr. of iterations");

        solutionsTA.setColumns(20);
        solutionsTA.setRows(5);
        jScrollPane1.setViewportView(solutionsTA);

        jLabel9.setText("Equation result");

        jLabel10.setText("Solutions");

        jButton1.setText("START");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jButton1)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(jLabel7)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6)
                            .addComponent(jLabel4)
                            .addComponent(jLabel8))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(nrOfParticlesTF)
                            .addComponent(dTF, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(maxVelocityTF)
                            .addComponent(wTF)
                            .addComponent(c1TF)
                            .addComponent(c2TF)
                            .addComponent(nrOfIterationsTF, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 51, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel9)
                    .addComponent(resultTF, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10))
                .addGap(34, 34, 34))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(nrOfParticlesTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1))
                        .addGap(18, 18, 18))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(dTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addGap(33, 33, 33)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(maxVelocityTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4))
                        .addGap(28, 28, 28)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(wTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(c1TF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5)))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(c2TF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7))
                        .addGap(18, 18, 18))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel9)
                        .addGap(7, 7, 7)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nrOfIterationsTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8)
                    .addComponent(resultTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addComponent(jButton1)
                .addContainerGap(37, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void nrOfParticlesTFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nrOfParticlesTFActionPerformed
        String str = nrOfParticlesTF.getText();
        this.nrOfParticles = Integer.parseInt(str);
       
        
    }//GEN-LAST:event_nrOfParticlesTFActionPerformed

    private void dTFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dTFActionPerformed
         String str = dTF.getText();
         this.d = Integer.parseInt(str);
    }//GEN-LAST:event_dTFActionPerformed

    private void maxVelocityTFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_maxVelocityTFActionPerformed
        String str = maxVelocityTF.getText();
        this.maxVelocity = Double.parseDouble(str);
    }//GEN-LAST:event_maxVelocityTFActionPerformed

    private void wTFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_wTFActionPerformed
        String str = wTF.getText();
        this.w = Double.parseDouble(str);
    }//GEN-LAST:event_wTFActionPerformed

    private void c1TFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_c1TFActionPerformed
        String str = c1TF.getText();
        this.c1 = Double.parseDouble(str);
    }//GEN-LAST:event_c1TFActionPerformed

    private void c2TFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_c2TFActionPerformed
        String str = c2TF.getText();
        this.c2 = Double.parseDouble(str);
    }//GEN-LAST:event_c2TFActionPerformed

    private void nrOfIterationsTFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nrOfIterationsTFActionPerformed
        String str = nrOfIterationsTF.getText();
        this.nrOfIterations = Integer.parseInt(str);
    }//GEN-LAST:event_nrOfIterationsTFActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        
        
        
        Parameters param = new Parameters(this.nrOfParticles, this.d, this.maxVelocity, this.w, this.c1, this.c2, this.nrOfIterations);
        
        Problem problem = new Problem();
        
        
        
        PSO solve = new PSO();
        Particle solution = solve.optimize(problem, param);
        
        String solutionsText = "";
        for(int i = 0; i < param.d; ++i) {
            //System.out.println(solution.position[i]);
            solutionsText = solutionsText + solution.position[i];
            solutionsText += '\n';
        }
        solutionsTA.setText(solutionsText);
        
        //System.out.println(solution.cost);
       String resultText = "";
       resultText = resultText + solution.cost;
       
       resultTF.setText(resultText);
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void nrOfParticlesTFInputMethodTextChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_nrOfParticlesTFInputMethodTextChanged
          String str = nrOfParticlesTF.getText();
          this.nrOfParticles = Integer.parseInt(str);
    }//GEN-LAST:event_nrOfParticlesTFInputMethodTextChanged

    private void dTFInputMethodTextChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_dTFInputMethodTextChanged
        String str = dTF.getText();
         this.d = Integer.parseInt(str);
    }//GEN-LAST:event_dTFInputMethodTextChanged

    private void maxVelocityTFInputMethodTextChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_maxVelocityTFInputMethodTextChanged
         String str = maxVelocityTF.getText();
        this.maxVelocity = Double.parseDouble(str);
    }//GEN-LAST:event_maxVelocityTFInputMethodTextChanged

    private void wTFInputMethodTextChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_wTFInputMethodTextChanged
         String str = wTF.getText();
        this.w = Double.parseDouble(str);
    }//GEN-LAST:event_wTFInputMethodTextChanged

    private void c1TFInputMethodTextChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_c1TFInputMethodTextChanged
        String str = c1TF.getText();
        this.c1 = Double.parseDouble(str);
    }//GEN-LAST:event_c1TFInputMethodTextChanged

    private void c2TFInputMethodTextChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_c2TFInputMethodTextChanged
        String str = c2TF.getText();
        this.c2 = Double.parseDouble(str);
    }//GEN-LAST:event_c2TFInputMethodTextChanged

    private void nrOfIterationsTFInputMethodTextChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_nrOfIterationsTFInputMethodTextChanged
        String str = nrOfIterationsTF.getText();
        this.nrOfIterations = Integer.parseInt(str);
    }//GEN-LAST:event_nrOfIterationsTFInputMethodTextChanged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Window.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Window.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Window.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Window.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Window().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField c1TF;
    private javax.swing.JTextField c2TF;
    private javax.swing.JTextField dTF;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField maxVelocityTF;
    private javax.swing.JTextField nrOfIterationsTF;
    private javax.swing.JTextField nrOfParticlesTF;
    private javax.swing.JTextField resultTF;
    private javax.swing.JTextArea solutionsTA;
    private javax.swing.JTextField wTF;
    // End of variables declaration//GEN-END:variables
}
